/*
  If you prefer your CSS Sassy. Run npm install -s node-sass and change the extension and import of this file.
  Or use Less or whatever form of styling brings you the most Joy. Bonus points for following a CSS methodology. (BEM, OOCSS, ETC)
*/
@import './colors';

body,
html {
  background-color: $lightGray;
  box-sizing: border-box;
  font-family: -apple-system,
    BlinkMacSystemFont,
    'Segoe UI',
    sans-serif;
  font-weight: 400;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  line-height: 1.15;
  margin: 0;
  padding: 0;

  ::-webkit-scrollbar { width: 10px; }

  ::-webkit-scrollbar-track { background: $darkBlack; }

  ::-webkit-scrollbar-thumb { background: $primary; }

  ::-webkit-scrollbar-thumb:hover { background: $dark; }
}

/* Font Styles */

a {
  text-decoration: none;
}

h2 {
  padding-left: 20px;
}

/* Element Styles */

article,
aside,
section {
  display: block;
}

pre {
  border-radius: 5px;
  font-size: 0.9em;
}

section {
  background-color: #212121;
  padding: 20px;
  font-size: 2em;
}

/* Form Styles */

form {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  padding: 1em 3em 2em 3em;
  margin: 0 auto;
  background-color: $white;
  border-radius: 3px * 1.4;
  box-shadow: 0 3px 10px -2px rgba(0, 0, 0, 0.2);

  button {
    background-color: $primary;
    border: none;
    border-radius: 3px;
    color: $white;
    height: 30px;
    width: 49%;
    font-size: 0.8em;
    padding: 5px;
    font-weight: 300;
    cursor: pointer;

    &:hover {
      background-color: $dark;
    }
  }

  footer {
    display: flex;
    flex-direction: row;
    justify-content: space-between;

    button {

      a { color: $white; }
    }
  }

  label { font-size: 0; }
}

input {
  width: 100%;
  padding: 1em;
  line-height: 1.4;
  background-color: $lightGray;
  border: 1px solid $darkGray;
  border-radius: 3px;

  &:focus {
    outline: 0;
    border-color: $primary;
    transition: 0.2s ease-in-out;

    & + .input-icon {

      svg {
        fill: $primary;
      }
    }
  }

  &[ type = 'checkbox' ] {
    display: none;

    & + label {
      position: relative;
      display: block;
      padding-left: 1.6em;

      &::before {
        position: absolute;
        top: 0.2em;
        left: 0;
        display: block;
        width: 1em;
        height: 1em;
        padding: 0;
      }

      &::after {
        position: absolute;
        top: 0.45em;
        left: 0.2em;
        font-size: 0.8em;
        color: $white;
        opacity: 0;
      }
    }
  }
}

.input-group {
  margin-bottom: 0.5em;
}

.input-group-icon {
  position: relative;

  input {
    padding-left: 4.4em;
  }

  .input-icon {
    position: absolute;
    top: 6px;
    left: 0;
    width: 3.4em;
    height: 3.4em;
    text-align: center;
    pointer-events: none;

    &::after {
      position: absolute;
      top: 0.6em;
      bottom: 0.6em;
      left: 3.4em;
      display: block;
      transition: 0.2s ease-in-out;
    }

    svg {
      fill: $black;
      transition: 0.2s ease-in-out;
    }
  }
}

nav {
  z-index: 2;
  display: flex;
  flex-direction: row;
  align-items: baseline;
  justify-content: space-between;
  background-color: $darkBlack;
  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.35);
  height: 30px;
  padding: 15px;

  a {
    color: $white;
    font-weight: 300;
    padding: 0 8px;
    height: 30px;
  }

  button {
    background-color: $primary;
    border: none;
    border-radius: 3px;
    color: $white;
    height: 30px;
    width: 70px;
    font-size: 0.8em;
    padding: 5px;
    font-weight: 300;
    cursor: pointer;

    &:hover {
      background-color: $dark;
    }
  }
}

/* Classes */

.container {
  padding-left: 20px;
  padding-right: 20px;
}

.row {
  display: flex;
  flex-direction: row;
  flex-grow: 2;
  flex-shrink: 1;
  flex-basis: auto;
  justify-content: space-evenly;
  align-items: stretch;
}

.col {
  display: flex;
  flex-direction: column;
  flex-grow: 0;
  flex-shrink: 1;
  flex-basis: auto;
  justify-content: flex-start;
  align-items: flex-start;
}
